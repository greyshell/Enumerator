#!/usr/bin/env python3

# author: greyshell

import argparse

from pwn import *

context(os='linux', arch='amd64')
context.terminal = ['tmux', 'splitw', '-h']  # run the local binary in tmux session


class MyUtils:
    """
    helper class for processing user input
    """
    def __init__(self):
        # create the top-level parser
        self.parser = argparse.ArgumentParser(
            description="linux binary exploitation")

        # optional arguments
        self.parser.add_argument("-m", "--debug_mode", metavar="", choices=["true", "false"],
                                 help="enable the debug mode, choices = {true, false}, default=false")

        # based on the dest argument subparsers will be selected
        self.subparsers = self.parser.add_subparsers(title="commands", dest="command",
                                                     help="[command] --help for more details")

        # create a sub parser for the local binary
        self.local_parser = self.subparsers.add_parser("local", description="exploit local binary",
                                                       help="exploit local binary")
        self.local_parser.add_argument("-b", "--binary", metavar="",
                                       help="provide the binary kept in the same directory",
                                       required=True)
        self.local_parser.add_argument("-g", "--gdb", metavar="", choices=['true', 'false'],
                                       help="attach gdb in tmux session, choices = {true, false}, default=false")
        self.local_parser.set_defaults(func='local')

        # create a sub parser for the binary running on network
        self.local_parser = self.subparsers.add_parser("network", description="exploit network binary",
                                                       help="exploit network binary")
        self.local_parser.add_argument("-i", "--ip_address", metavar="",
                                       help="provide ip_address",
                                       required=True)
        self.local_parser.add_argument("-p", "--port", metavar="",
                                       help="provide port",
                                       required=True)
        self.local_parser.set_defaults(func='network')
